---
name: 'Build nezha-dashboard'

on:
  push:
    tags:
      - '*'
  schedule:
    - cron: '0 16 1 * *'
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
  DOCKER_USERNAME: ${{ github.repository_owner }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  release_v0:
    name: 'Release ${{ matrix.nezha_version }} binary'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        nezha_version:
          - v0.18.6
          - v0.20.13

    steps:
      - name: 'checkout repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Check and remove existing tag'
        run: |
          if git tag --list | grep -q "^${{ matrix.nezha_version }}$"; then
            git push origin --delete ${{ matrix.nezha_version }}
          fi

      - name: 'Clone source code for ${{ matrix.nezha_version }}'
        run: |
          mkdir -p ${{ github.workspace }}/v0/source
          cd ${{ github.workspace }}/v0/source
          git clone --depth=1 --branch ${{ matrix.nezha_version }} https://github.com/nezhahq/nezha.git .

      - name: 'Replace static resources'
        working-directory: ${{ github.workspace }}/v0/source
        run: |
          cp ../build.sh .
          chmod +x build.sh
          ./build.sh

      - name: 'Fetch ipinfo geoip database'
        working-directory: ${{ github.workspace }}/v0/source
        run: |
          rm -f pkg/geoip/geoip.db
          wget --tries=50 --no-check-certificate -qO pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}

      - name: 'Extract version number'
        id: bump_version
        run: echo "nezha_version=$(sed 's/^v//' <<< ${{ matrix.nezha_version }})" >> "$GITHUB_OUTPUT"

      - name: 'Setup xgo go version'
        id: setup_go
        run: |
          GO_VERSION="$(wget --tries=50 --no-check-certificate -qO- https://go.dev/dl/?mode=json | awk '/version/ {print $2}' | sed -n '1s/.*"go\([0-9]*\.[0-9]*\).*/\1/p')"
          echo "go_version=$GO_VERSION" >> "$GITHUB_OUTPUT"

      - name: 'Fetch build time'
        id: build_time
        run: echo "build_time=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> "$GITHUB_OUTPUT"

      - name: 'Build release binaries'
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: ${{ steps.setup_go.outputs.go_version }}
          dest: build
          pkg: cmd/dashboard
          prefix: dashboard
          targets: linux/amd64,linux/arm64,linux/s390x
          v: true
          x: false
          race: false
          tags: timetzdata
          ldflags: -s -w --extldflags '-static -fpic' -X github.com/naiba/nezha/service/singleton.Version=${{ steps.bump_version.outputs.nezha_version }}
          buildmode: default
          trimpath: true
          working_dir: ${{ github.workspace }}/v0/source

      - name: 'Package release assets'
        working-directory: ${{ github.workspace }}/v0/source
        run: |
          cd build
          for FILE in *; do
            if [ -f "$FILE" ]; then
              PLATFORM=${FILE#dashboard-}
              PACKAGE_NAME="dashboard-${{ steps.bump_version.outputs.nezha_version }}-${PLATFORM}"
              mkdir "$PACKAGE_NAME"
              cp "$FILE" "${PACKAGE_NAME}/dashboard"
              sha256sum "${PACKAGE_NAME}/dashboard" | sed 's| .*| dashboard|' > "${PACKAGE_NAME}/checksum.txt"
              wget -qO "${PACKAGE_NAME}/LICENSE" https://www.apache.org/licenses/LICENSE-2.0.txt
              tar cfz "${PACKAGE_NAME}.tar.gz" "$PACKAGE_NAME"
              rm -rf "$PACKAGE_NAME"
            fi
          done
          cd ..

      - name: 'Create release and upload release'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ github.workspace }}/v0/source/build/*.tar.gz
          body: |
            Automated release of nezha-dashboard version ${{ matrix.nezha_version }}.
            Binaries are built from official repositories.
            Release time: ${{ steps.build_time.outputs.build_time }}
          generateReleaseNotes: false
          name: ${{ matrix.nezha_version }}
          tag: ${{ matrix.nezha_version }}

  build_v0:
    name: 'Build ${{ matrix.nezha_version }} image'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        nezha_version:
          - v0.18.6
          - v0.20.13

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Fetch ipinfo geoip database'
        working-directory: ${{ github.workspace }}/v0
        run: wget --tries=50 --no-check-certificate -qO geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to DockerHub'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/nezha-dashboard
          tags: type=raw,value=${{ matrix.nezha_version }}
          labels: |
            org.opencontainers.image.description=Nezha monitoring is self-hosted, lightweight server and website monitoring and O&M tool
            org.opencontainers.image.source=https://github.com/nezhahq/nezha
            org.opencontainers.image.title=Nezha
            org.opencontainers.image.url=https://nezha.wiki

      - name: 'Build and Push nezha-dashboard image'
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/v0
          file: ${{ github.workspace }}/v0/Dockerfile
          platforms: linux/amd64, linux/arm64/v8
          build-args: NEZHA_VERSION=${{ matrix.nezha_version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}

  build_v1:
    name: 'Build v1 image'
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Fetch Versions and Determine Build'
        id: bump_version
        run: |
          NEZHA_VERSION="$(wget -qO- --tries=50 --header="Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/nezhahq/nezha/releases/latest | grep '"tag_name":' | sed -n 's/.*"tag_name": "\(v[0-9.]*\)".*/\1/p')"
          echo "nezha_version=${NEZHA_VERSION}" >> "$GITHUB_OUTPUT"

      - name: 'Fetch ipinfo geoip database'
        working-directory: ${{ github.workspace }}/v1
        run: wget --tries=50 --no-check-certificate -qO geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to DockerHub'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/nezha-dashboard
          tags: type=raw,value=${{ steps.bump_version.outputs.nezha_version }}
          labels: |
            org.opencontainers.image.description=Nezha monitoring is self-hosted, lightweight server and website monitoring and O&M tool
            org.opencontainers.image.source=https://github.com/nezhahq/nezha
            org.opencontainers.image.title=Nezha
            org.opencontainers.image.url=https://nezha.wiki

      - name: 'Build and Push nezha-dashboard image'
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/v1
          file: ${{ github.workspace }}/v1/Dockerfile
          platforms: linux/amd64, linux/arm64/v8
          build-args: NEZHA_VERSION=${{ steps.bump_version.outputs.nezha_version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}

  sync:
    name: 'Sync readme to dockerhub'
    runs-on: ubuntu-latest
    needs:
      - release_v0
      - build_v0
      - build_v1

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Sync readme to dockerhub'
        uses: peter-evans/dockerhub-description@v5
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          repository: ${{ env.DOCKER_USERNAME }}/nezha-dashboard
          readme-filepath: ./README.md
          enable-url-completion: false
